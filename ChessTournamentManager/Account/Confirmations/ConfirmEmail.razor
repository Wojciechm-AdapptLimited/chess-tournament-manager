@page "/confirm-email"

@using System.Text
@using ChessTournamentManager.Core.User
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using ChessTournamentManager.Services

@inject UserManager<ApplicationUser> UserManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Confirm email</PageTitle>

<MudPaper MinHeight="400px" MaxWidth="800px" Elevation="5" Class="p-5 m-auto d-flex">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h4" Class="text-center">Confirm your email</MudText>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body1" Class="text-center">@_statusMessage</MudText>
        </MudItem>
        <MudItem xs="12">
            <MudButton FullWidth="true" Variant="Variant.Filled" Color="Color.Primary" Class="m-auto" Href="/">
                Back to home
            </MudButton>
        </MudItem>
    </MudGrid>
</MudPaper>

@code {
    private string? _statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? UserId { get; set; }

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Code is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByIdAsync(UserId);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            _statusMessage = "We experienced an error looking up your account. Please try again.";
        }
        else
        {
            var code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
            var result = await UserManager.ConfirmEmailAsync(user, code);
            _statusMessage = result.Succeeded 
                ? "Thank you for confirming your email." 
                : "We experienced an error confirming your email. Please try again.";
        }
    }
}
